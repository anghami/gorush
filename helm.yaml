fullnameOverride: gorush

image:
  repository: 339765050942.dkr.ecr.eu-west-1.amazonaws.com/anghami/gorush

service:
  type: ClusterIP
  externalPort: 32429
  internalPort: 8088

virtualService:
  enabled: true
  hosts:
    - gorush-staging.angha.me

autoscaling:
  enabled: true
  minReplicas: 5
  maxReplicas: 80
  targetCPUUtilizationPercentage: 50

resources:
  requests:
    cpu: '50m'
    memory: '256Mi'
  limits:
    cpu: '500m'
    memory: '512Mi'

externalSecrets:
  - from: gorush-staging-secrets
    backendType: secretsmanager
    data:
      - key: ios-certificate
        env: ios-certificate
      - key: android-key
        env: android-key
      - key: ios-password
        env: ios-password

configMaps:
  name: config
  data:
    config.yml: |
      core:
        enabled: true # enable httpd server
        address: "" # ip address to bind (default: any)
        shutdown_timeout: 30 # default is 30 second
        port: "8088" # ignore this port number if auto_tls is enabled (listen 443).
        worker_num: 128 # default worker number is runtime.NumCPU()
        queue_num: 16384 # default queue number is 8192
        max_notification: 1000
        # set true if you need get error message from fail push notification in API response.
        # It only works when the queue engine is local.
        sync: true
        # set webhook url if you need get error message asynchronously from fail push notification in API response.
        feedback_hook_url: ""
        feedback_timeout: 10 # default is 10 second
        feedback_header:
        mode: "release"
        ssl: false
        cert_path: "cert.pem"
        key_path: "key.pem"
        cert_base64: ""
        key_base64: ""
        http_proxy: ""
        pid:
          enabled: false
          path: "gorush.pid"
          override: true
        auto_tls:
          enabled: false # Automatically install TLS certificates from Let's Encrypt.
          folder: ".cache" # folder for storing TLS certificates
          host: "" # which domains the Let's Encrypt will attempt

      grpc:
        enabled: false # enable gRPC server
        port: 9000

      api:
        push_uri: "/api/push"
        stat_go_uri: "/api/stat/go"
        stat_app_uri: "/api/stat/app"
        config_uri: "/api/config"
        sys_stat_uri: "/sys/stats"
        metric_uri: "/metrics"
        health_uri: "/healthz"

      android:
        enabled: true
        key_path: "" # path to fcm key file
        credential: "" # fcm credential data
        max_retry: 0 # resend fail notification, default value zero is disabled

      huawei:
        enabled: false
        appsecret: "YOUR_APP_SECRET"
        appid: "YOUR_APP_ID"
        max_retry: 0 # resend fail notification, default value zero is disabled

      queue:
        engine: "local" # support "local", "nsq", "nats" and "redis" default value is "local"
        nsq:
          addr: 127.0.0.1:4150
          topic: gorush
          channel: gorush
        nats:
          addr: 127.0.0.1:4222
          subj: gorush
          queue: gorush
        redis:
          addr: 127.0.0.1:6379
          group: gorush
          consumer: gorush
          stream_name: gorush

      ios:
        enabled: true
        key_path: ""
        key_base64: "" # load iOS key from base64 input
        key_type: "p12" # could be pem, p12 or p8 type
        password: "" # certificate password, default as empty string.
        production: true
        max_concurrent_pushes: 1000 # just for push ios notification
        max_retry: 0 # resend fail notification, default value zero is disabled
        key_id: "" # KeyID from developer account (Certificates, Identifiers & Profiles -> Keys)
        team_id: "" # TeamID from developer account (View Account -> Membership)

      log:
        format: "json" # string or json
        access_log: "/dev/null" # stdout: output to console, or define log path like "log/access_log"
        access_level: "debug"
        error_log: "stderr" # stderr: output to console, or define log path like "log/error_log"
        error_level: "error"
        hide_token: false
        hide_messages: false

      stat:
        engine: "memory" # support memory, redis, boltdb, buntdb or leveldb
        redis:
          cluster: false
          addr: "localhost:6379" # if cluster is true, you may set this to "localhost:6379,localhost:6380,localhost:6381"
          username: ""
          password: ""
          db: 0
        boltdb:
          path: "bolt.db"
          bucket: "gorush"
        buntdb:
          path: "bunt.db"
        leveldb:
          path: "level.db"
        badgerdb:
          path: "badger.db"


